<?xml version="1.0"?>
<doc>
<assembly>
<name>
aoNewsStories
</name>
</assembly>
<members>
<member name="T:Contensive.Addons.aoNewsStories.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Contensive.Addons.aoNewsStories.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Contensive.Addons.aoNewsStories.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:Contensive.Addons.aoNewsStories.My.Resources.Resources.NewsStoryHomePageNewsList">
<summary>
  Looks up a localized string similar to &lt;div&gt;
	&lt;ul class=&quot;latestNewsUL&quot;&gt;
		{{#newsList}}
		&lt;li&gt;
			&lt;div class=&quot;oneArticle&quot;&gt;
				&lt;div class=&quot;art-date&quot;&gt;
					&lt;div class=&quot;art-cal&quot;&gt;
						&lt;div class=&quot;art-mo&quot;&gt;{{month}}&lt;/div&gt;
						&lt;div class=&quot;art-da&quot;&gt;{{day}}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
					
				&lt;p style=&quot;&quot;padding-left:10px;&quot;&quot;&gt;{{title}}&lt;/p&gt;
					
			&lt;/div&gt;
		&lt;/li&gt;
		{{^newsList}}
	&lt;/ul&gt;        
&lt;/div&gt;.
</summary>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Controllers.genericController.encodeMinDate(System.DateTime)">
 <summary>
 if date is invalid, set to minValue
 </summary>
 <param name="srcDate"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Controllers.genericController.getShortDateString(System.DateTime)">
 <summary>
 if valid date, return the short date, else return blank string 
 </summary>
 <param name="srcDate"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Controllers.genericController.executeColumnAddon(Contensive.BaseClasses.CPBaseClass,System.Int32,System.Int32,System.String)">
 <summary>
 execute an addon within a column
 </summary>
 <param name="cp"></param>
 <param name="addonId"></param>
 <param name="columnPtr"></param>
 <param name="instanceId"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Controllers.genericController.verifyProtocol(System.String)">
 <summary>
 buffer an url to include protocol
 </summary>
 <param name="url">Url that needs to nbe normalized</param>
 <returns>If blank is returned, </returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Controllers.genericController.encodeStyleHeight(System.String)">
 <summary>
 convert string into a style "height: {styleHeight};", if value is numeric it adds "px"
 </summary>
 <param name="styleheight"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Controllers.genericController.encodeStyleBackgroundImage(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 convert string into a style "background-image: url(backgroundImage)
 </summary>
 <param name="backgroundImage"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Controllers.InstanceIdController.getSettingsGuid(Contensive.BaseClasses.CPBaseClass,System.String,System.String@)">
 <summary>
 return the instanceId for a design block. It should be an document argument set when the addon is dropped on the page.
 If the addon is created with a json string it should be included as an argument
 If it is not included, the page id is used to make a string
 If no instanceId can be created a blank is returned and should NOT be used.
 If returnHtmlMessage is non-blank, add it to the html
 </summary>
 <param name="cp"></param>
 <param name="designBlockName">A name of the design block. This must be unqiue for each type of design block (i.e. text, tile, etc)</param>
 <param name="returnHtmlMessage"></param>
 <returns>If blank is returned, </returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.#ctor">
 <summary>
 Create an empty object. needed for deserialization
 </summary>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.add``1(Contensive.BaseClasses.CPBaseClass)">
 <summary>
 Add a new recod to the db and open it. Starting a new model with this method will use the default values in Contensive metadata (active, contentcontrolid, etc).
 include callersCacheNameList to get a list of cacheNames used to assemble this response
 </summary>
 <param name="cp"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.create``1(Contensive.BaseClasses.CPBaseClass,System.Int32)">
 <summary>
 return a new model with the data selected. All cacheNames related to the object will be added to the cacheNameList.
 </summary>
 <param name="cp"></param>
 <param name="recordId">The id of the record to be read into the new object</param>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.create``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 open an existing object
 </summary>
 <param name="cp"></param>
 <param name="recordGuid"></param>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.createByName``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 open an existing object
 </summary>
 <param name="cp"></param>
 <param name="recordName"></param>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.loadRecord``1(Contensive.BaseClasses.CPBaseClass,Contensive.BaseClasses.CPCSBaseClass)">
 <summary>
 open an existing object
 </summary>
 <param name="cp"></param>
 <param name="cs"></param>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.save(Contensive.BaseClasses.CPBaseClass)">
 <summary>
 save the instance properties to a record with matching id. If id is not provided, a new record is created.
 </summary>
 <param name="cp"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.delete``1(Contensive.BaseClasses.CPBaseClass,System.Int32)">
 <summary>
 delete an existing database record by id
 </summary>
 <param name="cp"></param>
 <param name="recordId"></param>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.delete``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 delete an existing database record by guid
 </summary>
 <param name="cp"></param>
 <param name="ccguid"></param>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.createList``1(Contensive.BaseClasses.CPBaseClass,System.String,System.String)">
 <summary>
 pattern get a list of objects from this model
 </summary>
 <param name="cp"></param>
 <param name="sqlCriteria"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.getRecordName``1(Contensive.BaseClasses.CPBaseClass,System.Int32)">
 <summary>
 get the name of the record by it's id
 </summary>
 <param name="cp"></param>
 <param name="recordId"></param>record
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.getRecordName``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 get the name of the record by it's guid 
 </summary>
 <param name="cp"></param>
 <param name="ccGuid"></param>record
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.getRecordId``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 get the id of the record by it's guid 
 </summary>
 <param name="cp"></param>
 <param name="ccGuid"></param>record
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoNewsStories.Models.Db.baseModel.getUploadPath``1(System.String)">
 <summary>
 Temporary method to create a path for an uploaded. First, try the texrt value in the field. If it is empty, use this method to create the path,
 append the filename to the end and save it to the field, and save the file there. This path starts with the tablename and ends with a slash.
 </summary>
 <param name="fieldName"></param>
 <returns></returns>
</member>
<member name="T:Contensive.Addons.aoNewsStories.Models.Db.DbBaseModel">
 <summary>
 This model provides the common fields for all Design Blocks.
 </summary>
</member>
</members>
</doc>
